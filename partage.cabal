name:               partage
version:            2.0.0.0
synopsis:           A* TWG parsing
description:
    The library implements an A* parser for tree wrapping grammars (TWGs).
    .
license:            BSD3
license-file:       LICENSE
cabal-version:      >= 1.10
copyright:          Copyright (c) 2015-2020 Jakub Waszczuk
author:             Jakub Waszczuk
maintainer:         waszczuk.kuba@gmail.com
stability:          experimental
category:           Natural Language Processing
homepage:           https://github.com/kawu/partage-twg
build-type:         Simple

-- TODO: Switch to cabal-version 2.2 or larger to use common stanzas
-- common common-extensions
--     default-extensions:   Strict, StrictData

library
    default-language:
        Haskell2010
    -- import: common-extensions
    default-extensions: Strict, StrictData
    hs-source-dirs: src
    build-depends:
        base                >= 4.8      && < 5
      , containers          >= 0.5      && < 0.7
      , mtl                 >= 2.1      && < 2.3
      , transformers        >= 0.3      && < 0.6
      , pipes               >= 4.1      && < 4.4
      , PSQueue             >= 1.1      && < 1.2
      , data-partition      >= 0.3      && < 0.4
      , mmorph              >= 1.0      && < 1.2
      , dawg-ord            >= 0.5      && < 0.6
      , data-lens-light     >= 0.1      && < 0.2
      , random              >= 1.1      && < 1.2
      , vector              >= 0.10     && < 0.13
      , hashable            >= 1.2      && < 1.4
      , hashtables          >= 1.2      && < 1.3
      , data-memocombinators  >= 0.5    && < 0.6
      , attoparsec          >= 0.13     && < 0.14
      , text                >= 1.2      && < 1.3

      -- only when debugging:
      , time                >= 1.5      && < 1.10

    exposed-modules:
        NLP.Partage.Tree
      , NLP.Partage.Tree.Other
      , NLP.Partage.DAG
      , NLP.Partage.Auto
      , NLP.Partage.Auto.List
      , NLP.Partage.Auto.Trie
      , NLP.Partage.Auto.DAWG
      , NLP.Partage.Auto.Set
      , NLP.Partage.Auto.WeiTrie
      , NLP.Partage.Auto.WeiSet

      , NLP.Partage.Earley
      , NLP.Partage.Earley.Base
      , NLP.Partage.Earley.Auto
      , NLP.Partage.Earley.Item
      , NLP.Partage.Earley.ExtWeight
      , NLP.Partage.Earley.Chart

      , NLP.Partage.AStar
      , NLP.Partage.AStar.Command
      , NLP.Partage.AStar.Parsed
      , NLP.Partage.AStar.Deriv
      , NLP.Partage.AStar.Deriv.Gorn

      , NLP.Partage.AStar.Base
      , NLP.Partage.AStar.Item
      , NLP.Partage.AStar.Chart

      , NLP.Partage.Format.Brackets

    other-modules:
        NLP.Partage.SOrd
      , NLP.Partage.Earley.AutoAP
      , NLP.Partage.AStar.Auto
      , NLP.Partage.AStar.Heuristic
      , NLP.Partage.AStar.HeuristicNew
      , NLP.Partage.AStar.Heuristic.Bag
      , NLP.Partage.AStar.ExtWeight

    ghc-options: -Wall

    -- Turn on debugging
    -- cpp-options: -DDebugOn

    -- Use the new heuristic (see the TAG-2017 paper:
    -- MWE-aware A* TAG parsing revisited)
    cpp-options: -DNewHeuristic

    -- Check realtime if the monotonicity property is preserved (see also the
    -- HandleDymmyArcWeight flag below)
    -- cpp-options: -DCheckMonotonic

    -- Account for the weight of the arc leading to the dummy root.  This makes
    -- the implementation slighly inconsistent with the formal description of
    -- the inference rules.  Note also that, currently, with this option turned
    -- on, monotonicity tests fail with the CheckMonotonic flag.
    cpp-options: -DHandleDummyArcWeight

    -- Grammar compression
    -- cpp-options: -DCompression

    -- WARNING: doesn't work with A* (and makes soma A* tests fail)
    -- cpp-options: -DExtraCompression

    -- Allow many (regular) adjunctions at a given node
    -- WARNING: you have to manage this flag in the test-suite as well!
    cpp-options: -DNoAdjunctionRestriction


source-repository head
    type: git
    location: https://github.com/kawu/partage-twg.git


test-suite test
    default-language:
        Haskell2010
    -- import: common-extensions
    default-extensions: Strict, StrictData
    type:
        exitcode-stdio-1.0
    hs-source-dirs:
        tests
    main-is:
        test.hs
    other-modules:
        Golden
      , Unit
      , UnitTestSet
    build-depends:
        partage
      , base                    >= 4        && < 5
      , containers              >= 0.5      && < 0.7
      , text                    >= 1.2      && < 1.3
      , tasty                   >= 0.10
      , tasty-hunit             >= 0.9
      , tasty-golden            >= 2.3      && < 2.4
      , HUnit                   >= 1.2
      , data-memocombinators    >= 0.5      && < 0.6
      , pipes                   >= 4.1      && < 4.4
      , transformers            >= 0.3      && < 0.6
      , filepath                >= 1.4      && < 1.5

    -- Allow many (regular) adjunctions at a given node
    -- WARNING: you have to manage this flag in the library section as well!
    cpp-options: -DNoAdjunctionRestriction


-- executable test-partage
--     default-language:
--         Haskell2010
--     build-depends:
--         partage
--       , base                    >= 4        && < 5
--       , containers          	>= 0.5      && < 0.6
--     hs-source-dirs: tests
--     main-is: test-partage.hs
--     ghc-options: -Wall -O2 -threaded -rtsopts

executable partage-twg
    default-language:
        Haskell2010
    -- import: common-extensions
    default-extensions: Strict, StrictData
    build-depends:
        partage
      , base                    >= 4        && < 5
      , mtl                     >= 2.1      && < 2.3
      , optparse-applicative    >= 0.12     && < 0.16
      , attoparsec              >= 0.13     && < 0.14
      , text                    >= 1.2      && < 1.3
      , containers              >= 0.5      && < 0.7
      , time                    >= 1.5      && < 1.10
      , pipes                   >= 4.1      && < 4.4
      , data-memocombinators    >= 0.5      && < 0.6
      , vector                  >= 0.10     && < 0.13
    hs-source-dirs: tools
    main-is: partage-twg.hs
    ghc-options: -Wall -O2 -threaded -rtsopts
